import Head from 'next/head'
import GlobalStyles from "../../styles/globals.styles"
import { Link, BackBtn, DetailsBox, ImageBox, DesktopImageBox, Col, Cols, Borders } from "../../styles/[id].styles"
import { HiOutlineArrowLeft } from "react-icons/hi"
import { GetServerSideProps } from 'next';
import Header from "../../component/Header"
import fs from 'fs/promises';

interface CurrencyProp {
    name: string,
}

interface LanguageProp {
    name: string,
}

interface CountryProps {
    name: string,
    nativeName: string,
    population: number,
    region: string
    subregion: string,
    capital: string,
    flag: string,
    topLevelDomain: [],
    currencies: CurrencyProp[],
    languages: LanguageProp[],
    borders: []
}

export default function Post(props: { countryData: CountryProps, hasError: boolean }) {
    if (props.hasError) {
        return <h1>Error - please try another parameter</h1>
    }

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
            </Head>
            <GlobalStyles />
            <Header />
            <main>
                <Link href="/">
                    <BackBtn>
                        <HiOutlineArrowLeft />
                        <p>Back</p>
                    </BackBtn>
                </Link>
                <DetailsBox>
                    <ImageBox src={props.countryData.flag} alt="flag" width={330} height={165} />
                    <DesktopImageBox src={props.countryData.flag} alt="flag" width={520} height={360} priority />
                    <div>
                        <h2>
                            {props.countryData.name}
                        </h2>
                        <Cols>
                            <Col>
                                <p><span>Native Name: </span>{props.countryData.nativeName}</p>
                                <p><span>Population: </span>{props.countryData.population}</p>
                                <p><span>Region: </span>{props.countryData.region}</p>
                                <p><span>Sub Region: </span>{props.countryData.subregion}</p>
                                <p><span>Capital: </span>{props.countryData.capital}</p>
                            </Col>
                            <Col>
                                <p><span>Top Level Domain: </span>{props.countryData.topLevelDomain}</p>
                                <p><span>Currencies: </span>{props.countryData.currencies?.map(currency => currency.name)}</p>
                                <p><span>Languages: </span>{props.countryData.languages?.map((language, index) =>
                                    (props.countryData.languages.length - 1) === index ? language.name : `${language.name}, `)}</p>
                            </Col>
                        </Cols>
                        <Borders>
                            <p>Border Countries:</p>
                            <div>
                                {props.countryData.borders?.map((border, index) => <span key={index}><p>{border}</p></span>)}
                            </div>
                        </Borders>
                    </div>
                </DetailsBox>
            </main>
        </>
    )
}

async function getData() {
    const filePath = process.cwd() + '/data.json';
    const fileData = await fs.readFile(filePath);
    const data = JSON.parse(fileData.toString());
    return data;
}

export const getServerSideProps: GetServerSideProps = async (context) => {
    const itemID = context.params?.id;
    console.log(itemID)
    //function to get data from the json file
    const data = await getData();
    const foundItem = data.find((country: CountryProps) => itemID === country.name);
    console.log(foundItem)
    console.log(!!foundItem)
    if (!foundItem) {
        return {
            props: { hasError: true },
        }
    }

    return {
        props: {
            countryData: foundItem
        }
    }
}